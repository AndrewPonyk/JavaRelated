1Java(Boot,JakartaEE, Hibernate, Maven, Gradle, JUnit, Micronaut, Quarkus, Vert.x, GraalVM, SLF4J,GraalVM(JIT+ Native-Image
2Multithreading (Threads (creation/management), Concurrency Primitives (locks, mutexes), Synchronization (critical sections), Race Conditions, Deadlocks, Semaphores, Atomic Operations, Thread Pools, Starvation,Producer-Consumer,Dining Philosophers, Sleeping Barber
3Python(Django, pytest,Flask, FastAPI, NumPy, Pandas, PyTorch, TensorFlow, Jupyter, Asyncio
4Machine learning (Scikit-learn, TensorFlow, PyTorch, Keras, XGBoost, LightGBM, CatBoost, HuggingFace Transformers)

5AWS(EC2, S3, EKS (!!!Kubernetes is MUST) , Lambda, RDS, DynamoDB, Ec2, VPC, IAM, CloudFormation, CloudWatch, SNS/SQS, Bedrock, Sagemaker)
6DB(MySQL, PostgreSQL, Oracle, SQL Server, MongoDB, Redis, Cassandra, Elasticsearch, Snowflake, Neo4j,   Pinecone,Weaviate,Milvus)
7Algorithms(Sorting, Searching, Graph, Dynamic Programming, Greedy, Divide-and-Conquer, Backtracking, String, Comp Geometry)
8Javascript (ES6+, Nextjs, TypeScript, Node.js, React, Vue.js, Angular, Express, Jest, Webpack, Babel, Vite, Svelte)
9Web Design(HTML5, Bulma, Sass, Bootstrap, Tailwind CSS, Figma, Adobe XD, Sketch, Webflow)
10Security(Metasploit,Kali Linux,Burp Suite,nmap, wireshark,OWASP ZAP,Cryptography/Secure Communications,Malware Analysis, Web App Security)
11Devops(Jenkins, Github Actions, Docker, K8s, Ansible, Terraform, Prometeus, Graphana, Elk)

12C# (.NET 8, ASP.NET Core, Blazor, Entity fr., LINQ, MAUI, WPF, NUnit)
13GO (Goroutines, Channels, net/http, Gin, Go Modules, gRPC, Docker, Testify)
14Rust (Cargo, Rustup, Crates.io, Tokio, WebAssembly, Actix, Rocket, Diesel, Serde)
15PHP (Laravel, Symfony, Composer, PHPUnit, Doctrine, Twig)
16Ruby (Rails, Sinatra, Hanami, Bundler, RSpec, RuboCop, Sidekiq, Capistrano)
17C++ (STL, Boost Libraries, RAII, Qt Framework, CUDA, Concurrency, Clang / GCC (compilers), CMake)
18C (GCC (GNU Compiler Collection), Clang/LLVM, Make/CMake, Valgrind , GDB (GNU Debugger), Embedded C, OpenMP , GTK )
19Flutter (Dart, Hot Reload, Widgets, Material Design, Cupertino, BLoC, Provider, Riverpod, FlutterFlow
20Gamedev(Unity, Unreal Engine, Godot, CryEngine, GameMaker Studio, Cocos2d-x, Blender, Substance Painter, Photon Networking)
21Video (processing, optimimizing and another video algor
22Compilers (Parsing theory, LLVM, JIT/AOT techniques, static analysis, type systems)
23Bigdata+ETL (Spark, Kafka, Hive/Trino, Flink, Airflow, dbt, NiFi, Snowflake, Databricks, AWS Glue, BigQuery, Beam)
24Blockchain(Solidity, Python, Rust, Web3.js, SHA-256,Truffle,IPFS,Hardhat,OpenZeppelin,Ganache,Ethers.js, Ethereum blockchain, Hyperledger Fabric DLT framework, Proof-of-Work (PoW) consensus mechanism, Merkle Trees data structure, Trezor hardware wallet security, MythX smart contract auditing tool, Consensus (PoW, PoS, PBFT implementations))
25GIS (ArcGIS, QGIS, PostGIS, Mapbox, Leaflet, GeoServer, GDAL, OpenLayers, Cesium, Coordinate systems, GeoJSON, spatial indexing (Râ€‘tree), Shapefile (.shp))
26Finance (Loan Origination &Servicing, Credit-Scoring Models, Risk Management & VaR, Portfolio Optimization, Market Prediction/Time-Series Forecasting, Algorithmic Trading, Derivatives Pricing, Asset Allocation & Rebalancing, Treasury/Liquidity Management)
27Assebmly (CPU Architecture (x86, ARM, Registers, Instruction Set (Opcodes), Assembler (NASM, MASM), Machine Code (Binary), Memory Addressing, System Calls (Interrupts), Linker)
28Medicine (FHIR (Fast Healthcare Interoperability Resources),  AlphaFold, CRISPR-Cas9, DICOM (Digital Imaging/Communications in Medicine))
29Kotlin (Android SDK, Jetpack Compose, Gradle, Retrofit, Coroutines, Room, Firebase, Ktor
IMPORTANT!: if you provide project - provide full stack of project (not only related to item), for example if you provide webportal in java topic - provide also front end part
Provide 4 projects (2 big, 2 medium) for each of the 29 items. For each project: Tech Stack(List in one line),Short Tech Description(Min. 2 sentences),Business Logic: (Min. 2 sentences)
Notes: For general topics (AWS, security, medicine, finance), any stack is fine (Java/JS/Python preferred) Brackets in stacks are main points; feel free to add other tools/frameworks.Use simplest formatting
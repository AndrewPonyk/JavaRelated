<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<bean name="customerRepository" class="com.pluralsight.repository.HibernateCustomerReporistoryImp">
		<property name="dbUrl" value="${dburl}"></property>
	</bean>
	<!-- In java config we can use @Value(${someProperty}) private String someProp; -->
	
	
	<!-- Setter injection -->
	<!-- <bean name="customerService" class="com.pluralsight.service.CustomerServiceImpl">
		<property name="customerRepository" ref="customerRepository"></property>
	</bean> -->

	<!-- Constructor injection -->
<!-- 	<bean name="customerService" class="com.pluralsight.service.CustomerServiceImpl">
		<constructor-arg index="0" ref="customerRepository"/>
	</bean> -->
	
		<!-- Autowired Constructor injection -->
	<!-- <bean name="customerService" class="com.pluralsight.service.CustomerServiceImpl" autowire="constructor">
	</bean>
	 -->
			<!-- Autowired byName -->
	<bean name="customerService" class="com.pluralsight.service.CustomerServiceImpl" autowire="byName" >
		
	</bean>
	
	
	<context:property-placeholder location="app.properties"/>
</beans>
